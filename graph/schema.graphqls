scalar Time

type Blueprint {
  id: ID!
  name: String!
  blueprintTemplate: String!

  parentGroup: Group!
  provider: Provider!
  deployments: [Deployment]!
}

type Deployment {
  id: ID!

  blueprint: Blueprint!
  requester: User!
}

type Group {
  id: ID!
  name: String!

  children: [Group]
  parent: Group
  users: [User]
  permissionPolicies: [PermissionPolicy]
  blueprints: [Blueprint]
}

type Permission {
  id: ID!
  key: String

  permissionPolicies: [PermissionPolicy]
}

enum PermissionPolicyType {
  ALLOW
  DENY
}

type PermissionPolicy {
  id: ID!
  type: PermissionPolicyType!

  permission: Permission!
  group: Group!
}

type User {
  id: ID!
  username: String!
  email: String!
  firstName: String!
  lastName: String!

  groups: [Group]!
  deployments: [Deployment]!
}

type Provider {
  id: ID!
  displayName: String!
  providerGitUrl: String!
  providerVersion: String!
  configBytes: String!
  isLoaded: Boolean!

  blueprints: [Blueprint]
}

enum CommandType {
  CONFIGURE
  DEPLOY
  DESTROY
}

enum CommandStatus {
  QUEUED
  FAILED
  SUCCEEDED
  INPROGRESS
}

type ProviderCommand {
  id: ID!
  commandType: CommandType!
  status: CommandStatus!
  startTime: Time
  endTime: Time
  output: String!
  error: String!
}

type Query {
  """
  List users
  """
  users: [User!]!
  """
  Get a user
  """
  user(id: ID!): User!
  """
  List groups
  """
  groups: [Group!]!
  """
  Get a group
  """
  group(id: ID!): Group!
  """
  List providers
  """
  providers: [Provider!]!
  """
  Get a provider
  """
  provider(id: ID!): Provider!
  """
  List provider commands
  """
  providerCommands: [ProviderCommand!]!
  """
  Get a provider command
  """
  providerCommand(id: ID!): ProviderCommand!
  """
  List blueprints
  """
  blueprints: [Blueprint!]!
  """
  Get a blueprint
  """
  blueprint(id: ID!): Blueprint!
}

input BlueprintInput {
  name: String!
  blueprintTemplate: String!

  parentGroupId: ID!
  providerId: ID!
}

input ProviderInput {
  displayName: String!
  providerGitUrl: String!
  providerVersion: String!
  configBytes: String!
}

type Mutation {
  ########
  # CRUD #
  ########

  """
  Create a provider
  """
  createProvider(input: ProviderInput!): Provider!
  """
  Update a provider
  """
  updateProvider(id: ID!, input: ProviderInput!): Provider!
  """
  Delete a provider
  """
  deleteProvider(id: ID!): Boolean!
  """
  Create a blueprint
  """
  createBlueprint(input: BlueprintInput!): Blueprint!
  """
  Update a blueprint
  """
  updateBlueprint(id: ID!, input: BlueprintInput!): Blueprint!

  #############
  # PROVIDERS #
  #############

  """
  Load a provider to connect it to CBLE
  """
  loadProvider(id: ID!): Provider!
  """
  Unload a provider to disconnect it from CBLE
  """
  unloadProvider(id: ID!): Provider!
  """
  Applies the stored configuration to the provider
  """
  configureProvider(id: ID!): Provider!

  ##############
  # DEPLOYMENT #
  ##############

  """
  Deploy a blueprint
  """
  deployBlueprint(id: ID!): Deployment!
  """
  Destroy a deployment
  """
  destroyDeployment(id: ID!): Deployment!
}
