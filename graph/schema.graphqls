scalar Time

type Blueprint {
  id: ID!
  name: String!
  blueprintTemplate: String!

  parentGroup: Group!
  Provider: Provider!
  deployments: [Deployment]!
}

type Deployment {
  id: ID!

  blueprint: Blueprint!
  requester: User!
}

type Group {
  id: ID!
  name: String!

  children: [Group]
  parent: Group
  users: [User]
  permissionPolicies: [PermissionPolicy]
  blueprints: [Blueprint]
}

type Permission {
  id: ID!
  key: String

  permissionPolicies: [PermissionPolicy]
}

enum PermissionPolicyType {
  ALLOW
  DENY
}

type PermissionPolicy {
  id: ID!
  type: PermissionPolicyType!

  permission: Permission!
  group: Group!
}

type User {
  id: ID!
  username: String!
  email: String!
  firstName: String!
  lastName: String!

  groups: [Group]!
  deployments: [Deployment]!
}

type Provider {
  id: ID!
  displayName: String!
  providerGitUrl: String!
  providerVersion: String!
  configBytes: String!
  isLoaded: Boolean!

  blueprints: [Blueprint]
}

type Query {
  """
  List users
  """
  users: [User!]!
  """
  Get a user
  """
  user(id: ID!): User!
  """
  List groups
  """
  groups: [Group!]!
  """
  Get a group
  """
  group(id: ID!): Group!
  """
  List providers
  """
  providers: [Provider!]!
  """
  Get a provider
  """
  provider(id: ID!): Provider!
  """
  List blueprints
  """
  blueprints: [Blueprint!]!
  """
  Get a blueprint
  """
  blueprint(id: ID!): Blueprint!
}

input ProviderInput {
  displayName: String!
  providerGitUrl: String!
  providerVersion: String!
  configBytes: String!
}

type Mutation {
  """
  Create a provider
  """
  createProvider(input: ProviderInput!): Provider!
  """
  Update a provider
  """
  updateProvider(id: ID!, input: ProviderInput!): Provider!
  """
  Delete a provider
  """
  deleteProvider(id: ID!): Boolean!
  """
  Load a provider to connect it to CBLE
  """
  loadProvider(id: ID!): Provider!
  """
  Unload a provider to disconnect it from CBLE
  """
  unloadProvider(id: ID!): Provider!
}
