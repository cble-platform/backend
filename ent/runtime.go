// Code generated by ent, DO NOT EDIT.

package ent

import (
	"github.com/cble-platform/backend/ent/blueprint"
	"github.com/cble-platform/backend/ent/deployment"
	"github.com/cble-platform/backend/ent/group"
	"github.com/cble-platform/backend/ent/permission"
	"github.com/cble-platform/backend/ent/permissionpolicy"
	"github.com/cble-platform/backend/ent/schema"
	"github.com/cble-platform/backend/ent/user"
	"github.com/cble-platform/backend/ent/virtualizationprovider"
	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	blueprintFields := schema.Blueprint{}.Fields()
	_ = blueprintFields
	// blueprintDescID is the schema descriptor for id field.
	blueprintDescID := blueprintFields[0].Descriptor()
	// blueprint.DefaultID holds the default value on creation for the id field.
	blueprint.DefaultID = blueprintDescID.Default.(func() uuid.UUID)
	deploymentFields := schema.Deployment{}.Fields()
	_ = deploymentFields
	// deploymentDescID is the schema descriptor for id field.
	deploymentDescID := deploymentFields[0].Descriptor()
	// deployment.DefaultID holds the default value on creation for the id field.
	deployment.DefaultID = deploymentDescID.Default.(func() uuid.UUID)
	groupFields := schema.Group{}.Fields()
	_ = groupFields
	// groupDescID is the schema descriptor for id field.
	groupDescID := groupFields[0].Descriptor()
	// group.DefaultID holds the default value on creation for the id field.
	group.DefaultID = groupDescID.Default.(func() uuid.UUID)
	permissionFields := schema.Permission{}.Fields()
	_ = permissionFields
	// permissionDescID is the schema descriptor for id field.
	permissionDescID := permissionFields[0].Descriptor()
	// permission.DefaultID holds the default value on creation for the id field.
	permission.DefaultID = permissionDescID.Default.(func() uuid.UUID)
	permissionpolicyFields := schema.PermissionPolicy{}.Fields()
	_ = permissionpolicyFields
	// permissionpolicyDescIsInherited is the schema descriptor for is_inherited field.
	permissionpolicyDescIsInherited := permissionpolicyFields[2].Descriptor()
	// permissionpolicy.DefaultIsInherited holds the default value on creation for the is_inherited field.
	permissionpolicy.DefaultIsInherited = permissionpolicyDescIsInherited.Default.(bool)
	// permissionpolicyDescID is the schema descriptor for id field.
	permissionpolicyDescID := permissionpolicyFields[0].Descriptor()
	// permissionpolicy.DefaultID holds the default value on creation for the id field.
	permissionpolicy.DefaultID = permissionpolicyDescID.Default.(func() uuid.UUID)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() uuid.UUID)
	virtualizationproviderFields := schema.VirtualizationProvider{}.Fields()
	_ = virtualizationproviderFields
	// virtualizationproviderDescID is the schema descriptor for id field.
	virtualizationproviderDescID := virtualizationproviderFields[0].Descriptor()
	// virtualizationprovider.DefaultID holds the default value on creation for the id field.
	virtualizationprovider.DefaultID = virtualizationproviderDescID.Default.(func() uuid.UUID)
}
